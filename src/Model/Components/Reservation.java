package Model.Components;

/**
 * This class stores the reservation for a passenger and an itinerary
 *
 * @author Matt Antantis
 * @author Ian Randman
 */
public class Reservation implements Trip {

    private Itinerary itinerary;
    private Passenger passenger;

    /**
     * The Reservation constructor
     *
     * @param passenger the passenger on the trip
     * @param itinerary the itinerary for the trip
     */
    public Reservation(Passenger passenger, Itinerary itinerary) {
        this.passenger = passenger;
        this.itinerary = itinerary;
    }

    /**
     * Gets the passenger for the trip
     *
     * @return the reservation's passenger
     */
    public Passenger getPassenger() {
        return passenger;
    }

    /**
     * Gets the total airfare cost for the trip
     *
     * @return the total airfare for the trip
     */
    @Override
    public int getAirfare() {
        return itinerary.getAirfare();
    }

    /**
     * Gets the origin of the trip
     *
     * @return the starting airport code
     */
    public String getOrigin() {
        return itinerary.getOrigin();
    }

    /**
     * Gets the destination of the trip
     *
     * @return the final airport code
     */
    public String getDestination() {
        return itinerary.getDestination();
    }

    public Itinerary getItinerary() {
        return itinerary;
    }

    /**
     * The information from the reservation to be
     * displayed to the user
     *
     * @return the info to be shown to the user
     */
    public String getData() {
        return "\n" + itinerary.getData();
    }

    /**
     * Converts the Reservation data into a string
     *
     * @return the reservation as a string
     */
    @Override
    public String toString() {
        return passenger.getName() + "," + itinerary.toString();
    }

    /**
     * Checks to see if the reservation is equal to an object
     *
     * @param o the object being compared
     * @return if the two objects are equal
     */
    @Override
    public boolean equals(Object o) {
        if (o == null || getClass() != o.getClass())
            return false;

        Reservation that = (Reservation) o;

        if (this.getOrigin().equals(that.getOrigin())) {
            if (this.getDestination().equals(that.getDestination()))
                return passenger.equals(that.passenger);
        }
        return false;
    }

    /**
     * Creates a hash code for the object
     * This method was auto-generated by IntelliJ
     *
     * @return the hashcode of the reservation
     */
    @Override
    public int hashCode() {
        int result = itinerary.hashCode();
        result = 31 * result + passenger.hashCode();
        return result;
    }
}
